[Описание видов памяти, выделения и очистки памяти]
=> https://tproger.ru/articles/memory-model/

Статический тип памяти - при объявлении глобальных/статических данных и методов(при создании очередного объекта класса, для методов этого класса не будет
перевыделяться память, она выделяется единожды и ее размер зависит от инструкций, которые описаны в методе)

Автоматический тип памяти - то есть размещение данных на стеке. К нему относятся локальные перменные, память для которых выделяется в какой-то отдельной
области видимости, например при вызове метода или при запуске цикла, а очищается данная память по достижению конца области видимости - конец метода,
завершения цикла и т.п. Не забываем про принцип стека: LIFO (Last In First Out), вызывающая функция = указатель на конец стека (вызов main и есть конец стека, например),
но указатель на РЕАЛЬНЫЙ конец стека хранится в специальном регистре процессора.

Динамический тип памяти - это память, которую мы выделяем вручную напрямую или с помощью аллокаторов. Данная память выделяется в куче, куча = просто склад ОЗУ памяти.
Благодаря динамической памяти мы можем создать массив, длина которого будет определяться в процессе работы программы и не будет статичной.
Так же после выделения памяти - необходимо не забыть ее очистить вручную. 
Для контроля динамической памяти можно использовать принцип(идиому) RAII (Resource Acquisition Is Initialization - Получение ресурса есть Инциализация), 
если по простому - при создании некого объекта мы выделяем память в конструкторе, то есть инициализируем поля. А при удалении объекта, деконструкции (~ClassName), мы
очищаем выделенную память. То есть не произойдет утечки памяти. 
Если же в общих чертах - При получении ресурса(создании объекта) - должна происходить инициализация, а освобождение ресурса - происходит уничтожение объекта.

В C++ для контроля памяти используют RAII и умные указатели(unique_ptr, shared_ptr), а в Java/C# используется Garbage Collector (Автоматический сборщик мусора)
Garbage Collector очищает память от переменных, которые больше не используются.