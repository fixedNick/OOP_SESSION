[Конструкторы и деструкторы]
=> https://prog-cpp.ru/cpp-construct/
[Protected]
=> https://docs.microsoft.com/ru-ru/cpp/cpp/protected-cpp?view=msvc-170


Нужно рассказать о классе & объектах, конструкторах и деструкторах в C++. Попробуем, но если что - есть миллиард ресурсов для более точных описаний.

В язке C++ можно создать свой тип данных - класс. Некоторый шаблон, схему, каждое порождение которого, то есть его экземпляр будет являться его объектом.
Каждый экземпляр класса уникален, имеет свой адрес памяти, который выделяется ему при создании. Набор полей/методов для объекта не изменен, этот набор
определяется в описании класса, а у объектов могут меняться значения полей и могут вызываться конкретные методы, в зависимост от надобности. 
Важно, что для всех объектов существует лишь одна копия статических членов, в то время как остальные члены(поля/методы) создаются для каждого отдельного
объекта класса. Поля и методы могут определяться с модификаторами public/private/protected.
public - доступен везде
private - доступен внутри класса
protected - доступен внутри класса и классах наследниках(смотря как наследуются от базового класса)
Объект класса, он же экземпляр класса, формируется с помощью конструктора класса, а уничтожается с помощью деструктора.

Конструктор это некая функци, с помощью которой создается объект, а так же инициализуются поля объекта(перменные объекта). Данная функция не имеет возвращаемого
значения и имеет такое же имя, что и класс.
Так же с помощью конструктора, как и с помощью обычного метода класса может быть создана копия объекта, когда в параметры принимается ссылка на 
другой объект класса (className& objectToCopy).

Конструкторы подчиняются тем же правилам относительно типов параметров, что и перегруженные функции. 
Если конструкторы существенно различаются по типам своих параметров, то компилятор при каждом использовании может выбрать правильный.

Как правило, при создании нового объекта на базе уже существующего происходит поверхностное копирование, то есть копируются те данные, 
которые содержит объект-источник. При этом если в объекте-источнике имеются указатели на динамические переменные и массивы, или ссылки, 
то создание копии объекта требует обязательного дублирования этих объектов во вновь создаваемом объекте. С этой целью вводится конструктор копии, 
который автоматически вызывается во всех перечисленных случаях. Он имеет единственный параметр — ссылку на объект-источник

Деструкторы
Определяемый пользователем класс имеет конструктор, который обеспечивает надлежащую инициализацию. Для многих типов также требуется обратное действие.
Деструктор обеспечивает соответствующую очистку объектов указанного типа. Имя деструктора представляет собой имя класса с предшествующим ему знаком 
«тильда» ~. Так, для класса X деструктор будет иметь имя ~X(). Многие классы используют динамическую память, которая выделяется конструктором, а 
освобождается деструктором.
По сути деструктор вызывается автоматически в конце области видимости, важно определять в деструкторе очистку динамической памяти, которую мы выделяли
при инциализации объекта или же при работе с его методами. 